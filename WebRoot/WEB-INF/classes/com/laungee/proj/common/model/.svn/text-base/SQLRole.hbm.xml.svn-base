<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
	<class name="com.laungee.proj.common.model.SQLRole">
        <id name="roleId" type="java.lang.Long">
        </id>
        <property name="roleName" type="java.lang.String">
        </property>
        <property name="code" type="java.lang.String">
        </property>
        <property name="isLeaf" type="java.lang.String">
        </property>
        <property name="parentId" type="java.lang.Long">
        </property>
        <property name="numOrder" type="java.lang.Long">
        </property>
    </class>
    <sql-query name="sqlRole">
    	<return class="com.laungee.proj.common.model.SQLRole">
      		<return-property name="roleId" column="ROLE_ID"/>
      		<return-property name="roleName" column="ROLE_NAME"/>
      		<return-property name="code" column="CODE"/>
      		<return-property name="isLeaf" column="IS_LEAF"/>
      		<return-property name="parentId" column="PARENT_ID"/>
      		<return-property name="numOrder" column="NUM_ORDER"/>
    	</return>
		  SELECT
          a.role_id AS ROLE_ID,
          a.role_name AS ROLE_NAME,
          a.code AS CODE,
          a.is_leaf AS IS_LEAF,
          a.parent_id AS PARENT_ID,
          a.num_order AS NUM_ORDER
          FROM  tb_role a
          WHERE EXISTS (
          SELECT
          1
          FROM  tb_role_user b left outer join tb_role b2 on b2.role_id=b.role_id
          left outer join tb_alumni b3 on b3.alumni_id=b.user_id
          WHERE (b2.code is null or b2.code!='ORGAN') 
          AND b3.alumni_id=? AND b2.role_id=a.role_id
          )
          START WITH UPPER(a.code)='ORGAN'
          CONNECT BY PRIOR a.role_id=a.parent_id
	</sql-query>
</hibernate-mapping>
